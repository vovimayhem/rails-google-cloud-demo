# This file is an override to the default 'docker-compose.yml' file, and is
# intended to be used in CI contexts (drone, github actions, semaphore, etc).
#
# The most important thing it does is re-uses the services defined in the main
# file (docker-compose.yml) such as postgres, pubsub, etc.
#
# To make it work, be sure you use an alias for docker-compose called
# `staging-compose`. You can create one like this:
# `alias staging-compose="docker-compose --file docker-compose.yml --file staging-compose.yml"`
# our apps:
version: "3.7"

services:
  web:
    image: vovimayhem/rails-google-cloud-demo:latest
    build:
      context: .
      target: release
      args:
        BUILDKIT_INLINE_CACHE: "1"
        DEVELOPER_UID: ${UID:-1000}
        DEVELOPER_USERNAME: ${USER:-you}
        APP_PATH: ${PWD:-/srv/rails-google-cloud-demo}
    ports:
      - ${DEMO_WEB_PORT:-3000}:3000

    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as byebug, etc:
    stdin_open: true

    # Enable sending signals (CTRL+C, CTRL+P + CTRL+Q) into the container:
    tty: true

    # Specify environment variables available for our app containers. We'll
    # leave a YML anchor in case we need to override or add more variables if
    # needed on each app service:
    environment: &app_environment
      PORT: "3000"

      RAILS_FORCE_SSL: "no"
      RAILS_LOG_TO_STDOUT: "true"
      RAILS_SERVE_STATIC_FILES: "yes"

      # Make sure this secret key base doesn't make it to the production environment:
      SECRET_KEY_BASE: 689b84e285d8cf7f76feec2f21054b74fa014eefcf28da13c06749ca58edd3aafa9575d18da49e6d540d5444914e768b00f2541b3e2563a735d0fbd1a6739432
