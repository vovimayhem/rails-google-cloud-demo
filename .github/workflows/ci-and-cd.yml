name: CI & CD

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_test_image:
    name: Build Test Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'

      - name: Add CI/CD scripts to system path
        run: echo "${GITHUB_WORKSPACE}/.github/workflows/bin" >> $GITHUB_PATH

      - name: Normalize env vars
        run: normalize-env-vars >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Image
        id: build_test_image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          target: testing

          platforms: linux/amd64
          
          tags: |
            vovimayhem/rails-google-cloud-run-and-tasks:testing-${{env.GIT_COMMIT_SHORT_SHA}}
            vovimayhem/rails-google-cloud-run-and-tasks:testing-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            APP_PATH=${{env.PWD}}
            DEVELOPER_UID=${{env.UID}}
            BUILD_DATE=${{env.BUILD_DATE}}
            DEVELOPER_USERNAME=${{env.USER}}
            SOURCE_BRANCH=${{env.GIT_BRANCH}}
            SOURCE_COMMIT=${{env.GIT_COMMIT_SHA}}
            IMAGE_NAME=vovimayhem/rails-google-cloud-run-and-tasks

      - name: Image digest
        run: echo ${{ steps.build_test_image.outputs.digest }}

      - name: List available Images
        run: docker image ls
  
  run_tests:
    name: Testing
    runs-on: ubuntu-latest
    needs: [build_test_image]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'

      - name: Add CI/CD scripts to system path
        run: echo "${GITHUB_WORKSPACE}/.github/workflows/bin" >> $GITHUB_PATH

      - name: Normalize env vars
        run: normalize-env-vars >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Load Testing Image
        id: load_test_image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          target: testing
          push: false

          # Make the build result to be available in the Docker client:
          load: true

          platforms: linux/amd64
          tags: |
            vovimayhem/rails-google-cloud-run-and-tasks:testing-${{env.GIT_COMMIT_SHORT_SHA}}
            vovimayhem/rails-google-cloud-run-and-tasks:testing-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            APP_PATH=${{env.PWD}}
            DEVELOPER_UID=${{env.UID}}
            BUILD_DATE=${{env.BUILD_DATE}}
            DEVELOPER_USERNAME=${{env.USER}}
            SOURCE_BRANCH=${{env.GIT_BRANCH}}
            SOURCE_COMMIT=${{env.GIT_COMMIT_SHA}}
            IMAGE_NAME=vovimayhem/rails-google-cloud-run-and-tasks

      - name: Run Tests
        run: tests-compose run tests
        env:
          # Configures docker-compose to use Docker CLI to build the image:
          COMPOSE_DOCKER_CLI_BUILD: 1
          # Configures Docker CLI to use BuildKit to build the image:
          DOCKER_BUILDKIT: 1

  build_release_image:
    name: Build Release Image
    runs-on: ubuntu-latest
    needs: [build_test_image]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.x'

      - name: Add CI/CD scripts to system path
        run: echo "${GITHUB_WORKSPACE}/.github/workflows/bin" >> $GITHUB_PATH

      - name: Normalize env vars
        run: normalize-env-vars >> $GITHUB_ENV

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        id: build_release_image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          target: release
          push: false # we should push when the branch is "main"...

          # Make the build result to be available in the Docker client:
          load: true

          platforms: linux/amd64
          tags: |
            vovimayhem/rails-google-cloud-run-and-tasks:${{env.GIT_COMMIT_SHORT_SHA}}
            vovimayhem/rails-google-cloud-run-and-tasks:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            APP_PATH=${{env.PWD}}
            DEVELOPER_UID=${{env.UID}}
            BUILD_DATE=${{env.BUILD_DATE}}
            DEVELOPER_USERNAME=${{env.USER}}
            SOURCE_BRANCH=${{env.GIT_BRANCH}}
            SOURCE_COMMIT=${{env.GIT_COMMIT_SHA}}
            IMAGE_NAME=vovimayhem/rails-google-cloud-run-and-tasks
